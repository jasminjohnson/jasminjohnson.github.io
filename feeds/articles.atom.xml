<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Financial Analysis Journal - articles</title><link href="http://jasminjohnson.github.io/" rel="alternate"></link><link href="http://jasminjohnson.github.io/feeds/articles.atom.xml" rel="self"></link><id>http://jasminjohnson.github.io/</id><updated>2018-07-15T00:00:00-04:00</updated><entry><title>Pandas Time Series Analysis</title><link href="http://jasminjohnson.github.io/blog/2018/07/15/Python-Pandas-TimeSeries/" rel="alternate"></link><published>2018-07-15T00:00:00-04:00</published><updated>2018-07-15T00:00:00-04:00</updated><author><name>Jasmin Johnson</name></author><id>tag:jasminjohnson.github.io,2018-07-15:blog/2018/07/15/Python-Pandas-TimeSeries/</id><summary type="html">

&lt;p&gt;Time Series can be useful to analyze financial data in different frequencies based on data distribution.
We can also generate random dates for data testing.&lt;/p&gt;
</summary><category term="financial"></category><category term="timeseries"></category><category term="pandas"></category></entry><entry><title>Data Visualization With Python</title><link href="http://jasminjohnson.github.io/blog/2018/06/30/SQLite-Python-Pandas-financial-analysis/" rel="alternate"></link><published>2018-06-30T00:00:00-04:00</published><updated>2018-06-30T00:00:00-04:00</updated><author><name>Jasmin Johnson</name></author><id>tag:jasminjohnson.github.io,2018-06-30:blog/2018/06/30/SQLite-Python-Pandas-financial-analysis/</id><summary type="html">

&lt;p&gt;Data visualizations and static or interactive visualizations are one of the data analysis tools to helping identify outliers
or data transformations and ideals for financial models.&lt;/p&gt;
&lt;p&gt;The example file "1960-2017 world population and life expectancy by country" is from &lt;a href="https://data.worldbank.org/indicator/SP.POP.TOTL"&gt;https://data.worldbank.org/indicator/SP.POP.TOTL&lt;/a&gt; and &lt;a href="https://data.worldbank.org/indicator/SP.DYN.LE00.IN"&gt;https://data.worldbank.org/indicator/SP.DYN.LE00.IN&lt;/a&gt;. 
The file is in Excel format with two tabs.&lt;/p&gt;
&lt;p&gt;The maximum number of data series per chart in Excel is 255, so using Python to chart a huge dataset is very useful.&lt;/p&gt;
</summary><category term="financial"></category><category term="SQLite"></category><category term="database"></category><category term="python"></category><category term="visualization"></category></entry><entry><title>SQLite Database for Financial Analysis</title><link href="http://jasminjohnson.github.io/blog/2018/06/15/SQLite-database-for-financial-analysis/" rel="alternate"></link><published>2018-06-15T10:00:00-04:00</published><updated>2018-06-15T10:00:00-04:00</updated><author><name>Jasmin Johnson</name></author><id>tag:jasminjohnson.github.io,2018-06-15:blog/2018/06/15/SQLite-database-for-financial-analysis/</id><summary type="html">

&lt;p&gt;After merging and reshaping the datasets, we can use SQLite to safely store, organize and manipulate data in smaller environments.
SQLite is a flexible database that can do real work in real business environments. 
This database tool can also be useful for accountants doing financial analysis.&lt;/p&gt;
</summary><category term="financial"></category><category term="SQLite"></category><category term="database"></category></entry><entry><title>Data Analysis With Python for Excel Users III - Merge and Reshape Data</title><link href="http://jasminjohnson.github.io/blog/2018/05/15/merge-reshape-for-financial-analysis/" rel="alternate"></link><published>2018-05-15T10:00:00-04:00</published><updated>2018-05-15T10:00:00-04:00</updated><author><name>Jasmin Johnson</name></author><id>tag:jasminjohnson.github.io,2018-05-15:blog/2018/05/15/merge-reshape-for-financial-analysis/</id><summary type="html">

&lt;p&gt;As a CPA, I have had to work with datasets from data processing applications, such as insurance application, general ledger,
regulatory reporting system and etc.&lt;/p&gt;
&lt;p&gt;The process is to incorporate all the data then create reinsurance analysis for pricing treaties, pro-forma financial analysis
for new business opportunity, regulatory compliance and risk assessment for stress test.&lt;/p&gt;
&lt;p&gt;As an old saying that the data needs to be valid, otherwise will be "Garbage In and Garbage Out".&lt;/p&gt;
&lt;p&gt;The first step for data preparation process involves loading, validating, merging and reshaping of data.&lt;/p&gt;
</summary><category term="financial"></category><category term="pandas"></category><category term="merge"></category></entry><entry><title>Data Analysis With Python for Excel Users II - Perform Excel Function in Python</title><link href="http://jasminjohnson.github.io/blog/2018/04/21/data-validation-for-financial-analysis/" rel="alternate"></link><published>2018-04-21T10:00:00-04:00</published><updated>2018-04-21T10:00:00-04:00</updated><author><name>Jasmin Johnson</name></author><id>tag:jasminjohnson.github.io,2018-04-21:blog/2018/04/21/data-validation-for-financial-analysis/</id><summary type="html">

&lt;p&gt;When we computed the mean, minimum and maximum of the data in Python, we are employing a technique to verify the data distribution.
This can be very effective when we need to quickly verify datasets for financial analysis.&lt;/p&gt;
</summary><category term="financial"></category><category term="pandas"></category><category term="data validation"></category></entry></feed>